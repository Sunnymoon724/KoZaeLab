using KZLib;
using KZLib.KZAttribute;
using KZLib.KZFiles;
using Sirenix.OdinInspector;
using MessagePack;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;

namespace MetaData
{
	#region $ClassName Data
	[MessagePackObject]
	public class $ClassNameData : IMetaData
	{
		#region Field
		$MemberFields
		[SerializeField,HideInInspector] private bool m_Exist;
		#endregion Field

		#region Property
		[BoxGroup("General")]
		$MemberProperties
		[HorizontalGroup("General/0"),LabelText("IsExist"),LabelWidth(100),ShowInInspector,KZIsValid("Exist","Error")]
		public bool IsExist => m_Exist;
		#endregion Property

		#region Initialize
		public $ClassNameData() { }

#if UNITY_EDITOR
		public $ClassNameData Initialize()
		{
			m_Exist = true;

			return this;
		}
#endif
		#endregion Initialize
	}
	#endregion $ClassName Data

	public class $ClassNameTable : MetaDataTable
	{
		[SerializeField,HideInInspector]
		private List<$ClassNameData> m_$ClassNameList = new();

		public override IEnumerable<IMetaData> DataGroup => m_$ClassNameList;

#if UNITY_EDITOR
		[BoxGroup("테이블",ShowLabel = false,Order = 1)]
		[VerticalGroup("테이블/1",Order = 1),LabelText("데이터 리스트"),TableList(IsReadOnly = true,AlwaysExpanded = true,ShowPaging = true,NumberOfItemsPerPage = 10),ShowInInspector]
		private readonly List<$ClassNameData> m_MetaDataList = new();

		protected override string TableName => "$SheetName";

		public override void OnRefresh()
		{
			m_$ClassNameList.Clear();

			var file = new ExcelFile(CurrentPath);
			var dataList = new List<$ClassNameData>();

			foreach(var data in file.Deserialize<$ClassNameData>(TableName))
			{
				dataList.Add(data.Initialize());
			}

			m_$ClassNameList.AddRange(dataList.OrderBy(x=>x.MetaId));

			base.OnRefresh();
		}

		protected override void SetMetaDataList(IEnumerable<IMetaData> _dataGroup)
		{
			m_MetaDataList.Clear();

			foreach(var data in _dataGroup)
			{
				m_MetaDataList.Add(data as $ClassNameData);
			}
		}
#endif
	}
}